name: Production

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Deploy
    strategy:
      matrix:
        app: [botcare]
        env: [prod]
        os: [ubuntu-latest]
        otp: [25.2]
        elixir: [1.14.2]
        # host port that will be mapped to Docker's 4000
        port: [8030]
        host: [46.101.106.59]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into GHCR
        run: echo "${{secrets.GITHUB_TOKEN}}" | docker login https://ghcr.io -u ${{github.actor}} --password-stdin

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/mxgrn/${{matrix.app}}:latest

      - name: Pull image on host, restart, run migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{matrix.host}}
          username: deploy
          key: ${{ secrets.DEPLOYMENT_KEY }}
          envs: SECRET_KEY_BASE,DATABASE_URL
          script_stop: true
          script: |
            docker pull ghcr.io/mxgrn/${{matrix.app}}
            docker stop ${{matrix.app}}_${{matrix.env}} || true
            docker rm ${{matrix.app}}_${{matrix.env}} || true
            docker run --name=${{matrix.app}}_${{matrix.env}} -d -p ${{matrix.port}}:4000 \
              -e PHX_SERVER=true \
              -e SECRET_KEY_BASE=${{secrets.SECRET_KEY_BASE}} \
              -e DATABASE_URL=${{secrets.DATABASE_URL}} \
              -e GITHUB_SHA=${{github.sha}} \
              -e BASIC_AUTH_USERNAME=${{secrets.BASIC_AUTH_USERNAME}} \
              -e BASIC_AUTH_PASSWORD=${{secrets.BASIC_AUTH_PASSWORD}} \
              -e CLOAK_KEY=${{secrets.CLOAK_KEY}} \
              -e PHX_HOST=${{secrets.PHX_HOST}} \
              -e TELEGRAM_WEBHOOK_SECRET=${{secrets.TELEGRAM_WEBHOOK_SECRET}} \
              ghcr.io/mxgrn/${{matrix.app}}
            while [ "`docker inspect -f {{.State.Running}} ${{matrix.app}}_${{matrix.env}}`" != "true" ]; do sleep 1; done
            docker exec ${{matrix.app}}_${{matrix.env}} /app/bin/migrate
